---------- 1 NOLU ÖDEV -----------

Frameworkler yazılım uygulamalarını geliştirirken zamandan kazanmak için destek görevi görür.

Java dünyasındaki frameworkler: 


- Spring

Model-View-Controller katmanlarını kontrol eden bir frameworktür. İhtiyacımız olan paketleri ve sınıfları ekleyerek diğer paketleri kullanmamızı sağlar.

@RestController
public class HelloController {

    @GetMapping("/hello")
    public String hello() {
        return "Merhaba Dünya!";
    }
}

Bu örnekte, @RestController Spring Framework'ünün bir parçası olan Spring Web modülünden geliyor.
Merhaba Dünya! metnini döndüren bir HTTP GET isteği tanımlıyor.

- Hibernate
Java sınıflarımızı veritabanı tablolarına dönüştürür ve bizim için veri sorgulama ve veri çekme işlemlerini gerçekleştirir. Karmaşık SQL sorguları yazmaktan kurtarır.

EntityManagerFactory emf = Persistence.createEntityManagerFactory("myPU");
EntityManager em = emf.createEntityManager();

em.getTransaction().begin();

User user = new User();
user.setUsername("alper_unsal");
user.setEmail("alperrunsall@gmail.com");

em.persist(user);
em.getTransaction().commit();

em.close();
emf.close();

User adında bir sınıf olduğunu varsayalım. Bu örnekte Hibernate ile etkileşim kuruyoruz ve persist()
yöntemiyle kullancıyı veritabanına kaydediyoruz. 

-JSF(Java Server Faces)
Web sayfalarında Java dilini kullanarak dinamik web sayfaları oluşturmamızı sağlar. Java ve XHTML dosyaları kullanılır.

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core">
<h:head>
    <title>JSF Örneği</title>
</h:head>
<h:body>
    <h:form>
        <h:outputLabel for="nameInput" value="Adınız:"/>
        <h:inputText id="nameInput" value="#{userBean.name}"/>

        <h:commandButton value="Welcome" action="#{userBean.welcomeUser()}"/>
    </h:form>

    <h:panelGroup rendered="#{not empty userBean.name}">
        Merhaba, #{userBean.name}!
    </h:panelGroup>
</h:body>
</html>

UserBean adlı bir sınıf olduğunu varsayalım. Butona basıldığında welcomeUser() çağırılır ve 
sonrasında istenilen sayfaya yönlendirilir.

- Maven
Proje içinde bir standart ve düzen oluşturmayı, geliştirme sürecini daha basitleştirmemizi sağlar. Projenin kütüphane bağımlılığını ve IDE bağımlılığını kaldırır.

Proje yapısı
myproject
├── pom.xml
└── src
    ├── main
    │   └── java
    │       └── com
    │           └── example
    │               └── App.java
    └── test
        └── java
            └── com
                └── example
                    └── AppTest.java

Proje içerisindeki App.java dosyasında bir Java sınıfı bulunabilir.
AppTest.java dosyasında ise bir birim test bulunabilir.
pom.xml dosyası ise proje yapılandırmasını ve bağımlılıklarını yönetir.

---------- 2 NOLU ÖDEV -----------


